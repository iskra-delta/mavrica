                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12391 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _printf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area _DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; absolute external ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DABS (ABS)
                                     28 ;--------------------------------------------------------
                                     29 ; global & static initialisations
                                     30 ;--------------------------------------------------------
                                     31 	.area _HOME
                                     32 	.area _GSINIT
                                     33 	.area _GSFINAL
                                     34 	.area _GSINIT
                                     35 ;--------------------------------------------------------
                                     36 ; Home
                                     37 ;--------------------------------------------------------
                                     38 	.area _HOME
                                     39 	.area _HOME
                                     40 ;--------------------------------------------------------
                                     41 ; code
                                     42 ;--------------------------------------------------------
                                     43 	.area _CODE
                           000000    44 	G$main$0$0	= .
                                     45 	.globl	G$main$0$0
                           000000    46 	C$main.c$14$0_0$5	= .
                                     47 	.globl	C$main.c$14$0_0$5
                                     48 ;jiti/main.c:14: int main(int argc, char *argv[]) {
                                     49 ;	---------------------------------
                                     50 ; Function main
                                     51 ; ---------------------------------
      000000                         52 _main::
      000000 DD E5            [15]   53 	push	ix
      000002 DD 21 00 00      [14]   54 	ld	ix,#0
      000006 DD 39            [15]   55 	add	ix,sp
                           000008    56 	C$main.c$16$1_0$5	= .
                                     57 	.globl	C$main.c$16$1_0$5
                                     58 ;jiti/main.c:16: printf("Total args %d\n", argc);
      000008 DD 6E 04         [19]   59 	ld	l, 4 (ix)
                                     60 ;	spillPairReg hl
                                     61 ;	spillPairReg hl
      00000B DD 66 05         [19]   62 	ld	h, 5 (ix)
                                     63 ;	spillPairReg hl
                                     64 ;	spillPairReg hl
      00000E E5               [11]   65 	push	hl
      00000F 21r4Er00         [10]   66 	ld	hl, #___str_0
      000012 E5               [11]   67 	push	hl
      000013 CDr00r00         [17]   68 	call	_printf
      000016 F1               [10]   69 	pop	af
      000017 F1               [10]   70 	pop	af
                           000018    71 	C$main.c$17$2_0$6	= .
                                     72 	.globl	C$main.c$17$2_0$6
                                     73 ;jiti/main.c:17: for(int i=1;i<argc;i++)
      000018 01 01 00         [10]   74 	ld	bc, #0x0001
      00001B                         75 00103$:
      00001B 79               [ 4]   76 	ld	a, c
      00001C DD 96 04         [19]   77 	sub	a, 4 (ix)
      00001F 78               [ 4]   78 	ld	a, b
      000020 DD 9E 05         [19]   79 	sbc	a, 5 (ix)
      000023 E2r28r00         [10]   80 	jp	PO, 00118$
      000026 EE 80            [ 7]   81 	xor	a, #0x80
      000028                         82 00118$:
      000028 F2r48r00         [10]   83 	jp	P, 00101$
                           00002B    84 	C$main.c$18$2_0$6	= .
                                     85 	.globl	C$main.c$18$2_0$6
                                     86 ;jiti/main.c:18: printf("%s\n",argv[i]);
      00002B 69               [ 4]   87 	ld	l, c
                                     88 ;	spillPairReg hl
                                     89 ;	spillPairReg hl
      00002C 60               [ 4]   90 	ld	h, b
                                     91 ;	spillPairReg hl
                                     92 ;	spillPairReg hl
      00002D 29               [11]   93 	add	hl, hl
      00002E EB               [ 4]   94 	ex	de,hl
      00002F DD 6E 06         [19]   95 	ld	l, 6 (ix)
      000032 DD 66 07         [19]   96 	ld	h, 7 (ix)
      000035 19               [11]   97 	add	hl, de
      000036 5E               [ 7]   98 	ld	e, (hl)
      000037 23               [ 6]   99 	inc	hl
      000038 56               [ 7]  100 	ld	d, (hl)
      000039 C5               [11]  101 	push	bc
      00003A D5               [11]  102 	push	de
      00003B 21r5Dr00         [10]  103 	ld	hl, #___str_1
      00003E E5               [11]  104 	push	hl
      00003F CDr00r00         [17]  105 	call	_printf
      000042 F1               [10]  106 	pop	af
      000043 F1               [10]  107 	pop	af
      000044 C1               [10]  108 	pop	bc
                           000045   109 	C$main.c$17$2_0$6	= .
                                    110 	.globl	C$main.c$17$2_0$6
                                    111 ;jiti/main.c:17: for(int i=1;i<argc;i++)
      000045 03               [ 6]  112 	inc	bc
      000046 18 D3            [12]  113 	jr	00103$
      000048                        114 00101$:
                           000048   115 	C$main.c$20$1_0$5	= .
                                    116 	.globl	C$main.c$20$1_0$5
                                    117 ;jiti/main.c:20: return 0;
      000048 21 00 00         [10]  118 	ld	hl, #0x0000
                           00004B   119 	C$main.c$21$1_0$5	= .
                                    120 	.globl	C$main.c$21$1_0$5
                                    121 ;jiti/main.c:21: }
      00004B DD E1            [14]  122 	pop	ix
                           00004D   123 	C$main.c$21$1_0$5	= .
                                    124 	.globl	C$main.c$21$1_0$5
                           00004D   125 	XG$main$0$0	= .
                                    126 	.globl	XG$main$0$0
      00004D C9               [10]  127 	ret
                           00004E   128 Fmain$__str_0$0_0$0 == .
      00004E                        129 ___str_0:
      00004E 54 6F 74 61 6C 20 61   130 	.ascii "Total args %d"
             72 67 73 20 25 64
      00005B 0A                     131 	.db 0x0a
      00005C 00                     132 	.db 0x00
                           00005D   133 Fmain$__str_1$0_0$0 == .
      00005D                        134 ___str_1:
      00005D 25 73                  135 	.ascii "%s"
      00005F 0A                     136 	.db 0x0a
      000060 00                     137 	.db 0x00
                                    138 	.area _CODE
                                    139 	.area _INITIALIZER
                                    140 	.area _CABS (ABS)
